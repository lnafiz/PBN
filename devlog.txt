Peanut Butter and Nutella
Prattay Dey
Brian Li
Nafiz Labib
pd 6
---------------------
Blackjack

/////////// Zone of Reflection \\\\\\\\\\\
------------------------------------------
OBSTACLES OVERCOME
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
wow we so BOSS bc...
- we learned to use a normal for loop instead of enhanced for loop when it came to modifying an array of objects.
- we provided memory addresses of some objects to other objects via passing it as an argument in a constructor.
- we used typecasting to be able to invoke methods of elements in a parameterized ArrayList.
- we got past the issue of unicode symbols being different lengths by including a space between the value of a card and the suit of the card.

UNRESOLVED ISSUES
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
blah blah pesky bug...
maybe some of these will move into the Obs.Ovrcm section...
- it was tedious to provide memory addresses of objects across Java files. perhaps there is a better method of doing so?
- it was also tedious to have to use typecasting each time on elements of an ArrayList that is already parameterized. Why is that a thing? 

COOL STUFF LEARNED
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
wow! oo!...
- using an enhanced for loop doesn't modify the elements within the supplied array directly. instead, it creates a copy of each element in the array and alters the copy.
- different operating systems interpret unicode characters as a different length.

MID-DEVELOPMENT DESIGN CHANGES
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
we changed ___ to ___ bc...
- we changed Bots standing at a certain value to being solely dependent on Math.random() because we thought it was a more realistic indicator of the types of people that play blackjack (they are stupid).
- we changed a score system to a play credit system because we thought a score system does not provide a legitimate deterrent from splitting or doubling every chance you get. by using a play credit system, players are charged an additional credit for those moves.
- we changed the originally proposed blackjack() and bust() methods to be built into one while loop that checks for those conditions because we thought it was unnecessary. also, the names of some proposed methods were changed to be more clear.

LESSONS LEARNED
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tales of wisdom gained...
- UMLs are a lifesaver
- coding takes 10% of your time. planning and DEBUGGING takes the other 90%.
||||||||||||||||||||||||||||||||||||||||||



 ______   ______   __   __   __       ______   _______
/_____/\ /_____/\ /_/\ /_/\ /_/\     /_____/\ /______/\
\:::_ \ \\::::_\/_\:\ \\ \ \\:\ \    \:::_ \ \\::::__\/__
 \:\ \ \ \\:\/___/\\:\ \\ \ \\:\ \    \:\ \ \ \\:\ /____/\
  \:\ \ \ \\::___\/_\:\_/.:\ \\:\ \____\:\ \ \ \\:\\_  _\/
   \:\/.:| |\:\____/\\ ..::/ / \:\/___/\\:\_\ \ \\:\_\ \ \
    \____/_/ \_____\/ \___/_(   \_____\/ \_____\/ \_____\/
==============================================================


2022-01-13
--------------------------------------------------------------
Nafiz :: Initial creation
Prattay :: Proposal drafting
Brian :: Proposal drafting
==============================================================

2022-01-14
--------------------------------------------------------------
Nafiz :: Proposal additions and edits
Prattay :: Proposal edits, Blackjack.java edits
Brian :: Woo.java main method creation, Blackjack.java additions
==============================================================

2022-01-17
--------------------------------------------------------------
Nafiz :: Proposal additions and edits
Prattay :: Proposal edits
Brian :: First attempt at coding, first draft made. Later plans
         made to further improve and flesh out code.
==============================================================

2022-01-18
--------------------------------------------------------------
Nafiz :: Collaboration on v1
Prattay :: Collaboration on v1
Brian :: Collaboration on v1

v1: Progresses to manipulating hand, reduced uses of unnecessary
    arrays, creation of subclasses of Gambler. General bug fixes.
==============================================================
2022-01-19
--------------------------------------------------------------
Nafiz :: Declutter duty (remove unnecessary code/text).
         Collaboration on v2
Prattay :: Testing main method for different game situations
           Collaboration on v2
Brian :: Collaboration on v2
         Initial development of Dealer, furthered main method.

v2: Bug fixes (especially in aceCheck()), less code and text 
    (aimed for readability), addition of Dealer, shuffled order
    of users, began commenting methods to provide insight.
==============================================================
2022-01-20
--------------------------------------------------------------
Nafiz :: Added first version of instructions within game
         Collaboration on v3
Prattay :: Testing main method for different game situations,
           split and double edits
           Collaboration on v3
Brian :: Filling in code for more actions (double, split)
         Collaboration on v3

v3: More bug fixes, instructions present with implementable action,
    added code for methods split and double, creation of Blackjack.java
    (organization of Woo.java's main method into a separate class), 
    added play credit system, refactored existing methods.
==============================================================
2022-01-21
--------------------------------------------------------------
Nafiz :: Added more instructions, tested credit system
         Collaboration on v4
Prattay :: Reviewing UML and flowchart diagrams, tested credit system
           Collaboration on v4
Brian :: Added mutator methods
         Collaboration on v4

v4: More bug fixes, added more to instructions, mutated methods 
==============================================================
2022-01-22
--------------------------------------------------------------
Nafiz :: Collaboration on v5, playtesting
Prattay :: Collaboration on v5, playtesting
Brian :: Collaboration on v5, planning on using ANSI

v5: Added card counting, formatting, added comments for each method,
    cleaned up unnecessary code, split large methods into several smaller
    methods, general bug fixes
    
==============================================================
2022-01-23
--------------------------------------------------------------
Nafiz :: Collaboration on v6, assistance with ANSI
Prattay :: Collaboration on v6, assistance with ANSI
Brian :: Collaboration on v6, implementation of ANSI

v6: Code cleanup, ANSI implementation
